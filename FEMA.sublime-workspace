{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"print",
				"printmatrix"
			],
			[
				"GlobalS",
				"GlobalStiffnessMatrix"
			],
			[
				"glo",
				"GlobalStivhetsmatrise"
			],
			[
				"Element",
				"ElementNr"
			],
			[
				"A",
				"a"
			],
			[
				"fem",
				"FEMTypes"
			],
			[
				"gl",
				"globalIndex"
			],
			[
				"null",
				"NullifyRealVector"
			],
			[
				"global",
				"globalestivhetsmatrisen"
			],
			[
				"cy",
				"cycle"
			],
			[
				"L",
				"LoadVector"
			],
			[
				"Gl",
				"GlobalStiffnessMatrix"
			],
			[
				"file",
				"file_in"
			],
			[
				"re",
				"read	Read"
			],
			[
				"file_",
				"file_out"
			],
			[
				"op",
				"open	Output File"
			],
			[
				"err",
				"errorFlag"
			],
			[
				"for",
				"ForceVector"
			],
			[
				"em",
				"elm"
			],
			[
				"io",
				"iostat"
			],
			[
				"wr",
				"write	Write"
			],
			[
				"fil",
				"file_out"
			],
			[
				"El",
				"ElementLoadVector"
			],
			[
				"Ele",
				"ElementLoadVector"
			],
			[
				"R",
				"ElmsRotationMatrix"
			],
			[
				"num",
				"numberOfLoads"
			],
			[
				"nu",
				"numberOfNodes"
			],
			[
				"mat",
				"Matrix"
			],
			[
				"M",
				"Matrix"
			],
			[
				"h",
				"heigth"
			],
			[
				"int",
				"integer"
			],
			[
				"fun",
				"fun	function"
			],
			[
				"elm",
				"Elms"
			],
			[
				"F",
				"ForceVector"
			],
			[
				"D",
				"DisplacementVector"
			],
			[
				"Di",
				"DisplacementVectorWithZero"
			],
			[
				"no",
				"node1"
			],
			[
				"P",
				"PrintMatrix"
			],
			[
				"Load",
				"LoadsOnElement"
			],
			[
				"sub",
				"subroutine"
			],
			[
				"LS",
				"LocalStiffness"
			],
			[
				"node",
				"node2"
			],
			[
				"s",
				"s"
			],
			[
				"len",
				"length"
			],
			[
				"sin",
				"sinT"
			],
			[
				"su",
				"sub	subroutine"
			],
			[
				"Lo",
				"LoadsOnNodes"
			],
			[
				"S",
				"Subroutine"
			],
			[
				"Elm",
				"Elms"
			],
			[
				"el",
				"element"
			],
			[
				"inte",
				"integer"
			],
			[
				"G",
				"GSMlen"
			],
			[
				"di",
				"DisplacementVector"
			],
			[
				"GTR",
				"GTRGConverter"
			],
			[
				"dis",
				"DisplacementVector"
			],
			[
				"t",
				"t	Quick Custom Type"
			],
			[
				"pr",
				"pr_switch"
			],
			[
				"in",
				"int	Integer"
			],
			[
				"B",
				"BackwardSubstitution"
			],
			[
				"b",
				"backwardSubstitution"
			],
			[
				"eps",
				"epsilon"
			],
			[
				"then",
				"then"
			],
			[
				"cl",
				"closeToZeroBug"
			],
			[
				"f",
				"fun	function"
			],
			[
				"Loa",
				"LoadVector"
			],
			[
				"if",
				"if	if (single line)"
			],
			[
				"prin",
				"PrintMatrix"
			],
			[
				"Loc",
				"LocalStiffnessMatrix"
			]
		]
	},
	"buffers":
	[
		{
			"contents": "def idMatx(size):\n  id = []\n  for i in range(size):\n    id.append([0]*size)\n  for i in range(size):\n    id[i][i] = 1\n  return(id)\n \ndef tranMtx(inMtx):\n  tMtx = []\n  for row in range(0, len(inMtx[0])):\n    tRow = []\n    for col in range(0, len(inMtx)):\n      ele = inMtx[col][row]\n      tRow.append(ele)\n    tMtx.append(tRow)\n  return(tMtx)\n \ndef matxRound(matx, decPts=4):\n  for col in range(len(matx)):\n    for row in range(len(matx[0])):\n      matx[col][row] = round(matx[col][row], decPts)\n\ndef printmatrix(mat):\n  for row in mat:\n    print row\n \n# the solver ...\n \ndef gj_Solve(A, b=False, decPts=4):\n  \"\"\" A gauss-jordan method to solve an augmented matrix for\n030\n      the unknown variables, x, in Ax = b.\n031\n      The degree of rounding is 'tuned' by altering decPts = 4.\n032\n      In the case where b is not supplied, b = ID matrix, and therefore\n033\n      the output is the inverse of the A matrix.\n034\n  \"\"\"\n \n  if not b == False:\n    # first, a test to make sure that A and b are conformable\n    if (len(A) != len(b)):\n      print 'A and b are not conformable'\n      return\n    Ab = A[:]\n    Ab.append(b)\n    m = tranMtx(Ab)\n  else:\n    ii = idMatx(len(A))\n    Aa = A[:]\n    for col in range(len(ii)):\n      Aa.append(ii[col])\n    tAa = tranMtx(Aa)\n    m = tAa[:]\n \n  (eqns, colrange, augCol) = (len(A), len(A), len(m[0]))\n \n  # permute the matrix -- get the largest leaders onto the diagonals\n  # take the first row, assume that x[1,1] is largest, and swap if that's not true\n  for col in range(0, colrange):\n    bigrow = col\n    for row in range(col+1, colrange):\n      if abs(m[row][col]) > abs(m[bigrow][col]):\n        bigrow = row\n        (m[col], m[bigrow]) = (m[bigrow], m[col])\n  print 'm is ' \n  printmatrix(m)\n \n\n  # reduce, such that the last row is has at most one unknown\n\n  for rrcol in range(0, colrange):\n\n    for rr in range(rrcol+1, eqns):\n      cc = -(float(m[rr][rrcol])/float(m[rrcol][rrcol]))\n\n      for j in range(augCol):\n        m[rr][j] = m[rr][j] + cc*m[rrcol][j]\n \n  # final reduction -- the first test catches under-determined systems\n  # these are characterised by some equations being all zero\n  for rb in reversed(range(eqns)):\n    if ( m[rb][rb] == 0):\n      if m[rb][augCol-1] == 0:\n        continue\n      else:\n        print 'system is inconsistent'\n        return\n    else:\n      # you must loop back across to catch under-determined systems\n      for backCol in reversed(range(rb, augCol)):\n        m[rb][backCol] = float(m[rb][backCol]) / float(m[rb][rb])\n      # knock-up (cancel the above to eliminate the knowns)\n      # again, we must loop to catch under-determined systems\n      if not (rb == 0):\n        for kup in reversed(range(rb)):\n          for kleft in reversed(range(rb, augCol)):\n            kk = -float(m[kup][rb]) / float(m[rb][rb])\n            m[kup][kleft] += kk*float(m[rb][kleft])\n \n  matxRound(m, decPts)\n \n  if not b == False:\n    return m\n  else:\n    mOut = []\n    for row in range(len(m)):\n      rOut = []\n      for col in range(augCol/2, augCol):\n        rOut.append(m[row][col])\n      mOut.append(rOut)\n    return mOut\n \n# test it!\nA=   [[6.6063361,       0.0000000,       159.99199,      -6.4996748,       0.0000000       0.0000000],    [0.0000000   ,    6.5530057   ,   -79.995995  ,     0.0000000 ,    -5.33306636E-02  ,-79.995995    ],    [159.99199   ,   -79.995995   ,    479975.97  ,     0.0000000  ,     79.995995      , 79995.992    ],  [-6.4996748   ,    0.0000000   ,    0.0000000  ,     6.6063361   ,    0.0000000      , 159.99199    ],  [ 0.0000000   ,  -5.33306636E-02,   79.995995  ,     0.0000000   ,    6.5530057      , 79.995995    ],  [ 0.0000000   ,   -79.995995    ,   79995.992  ,     159.99199   ,    79.995995      , 479975.97   ]]\n# A =  [  [440444.44  ,     0.0000000 ,     -10666666 ,     -433333.31  ,     0.0000000   ,    0.0000000  ],[ 0.0000000  ,     436888.88  ,     5333333.0   ,    0.0000000    ,   4444.4443  ,     5333333.0   ],[-10666666.    ,   5333333.0   ,   3.19999980E+10 ,  0.0000000     , -5333333.0   ,   5.33333299E+09],[-433333.31    ,   0.0000000   ,    0.0000000     ,  440444.44     ,  0.0000000    ,   10666666.    ],[0.0000000     ,  4444.4443   ,   -5333333.0     ,  0.0000000    ,   436888.88     , -5333333.0    ],[0.0000000     ,  5333333.0   ,   5.33333299E+09 ,  10666666.    ,  -5333333.0    ,  3.19999980E+10]]\nprint 'A'\nprintmatrix(A)\n\nb = [40000.000  ,     0.0000000    ,   0.0000000     ,  0.0000000     ,  0.0000000     ,  500000   ]\n \nsol = gj_Solve(A, b)\nprint '\\n\\n\\n\\n'\nprint 'sol is ',\nfor row in  sol:\n  print row\n \ninv = gj_Solve(A)\nprint 'inv is '\nprintmatrix(inv)\n\n",
			"file": "Test/axbsolver.py",
			"file_size": 4618,
			"file_write_time": 1352117041000000,
			"settings":
			{
				"buffer_size": 4617,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FEMMethods.f90",
			"settings":
			{
				"buffer_size": 12704,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FEMUtility.f90",
			"settings":
			{
				"buffer_size": 1971,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FEM.f90",
			"settings":
			{
				"buffer_size": 3198,
				"line_ending": "Unix"
			}
		},
		{
			"file": "README.md",
			"settings":
			{
				"buffer_size": 643,
				"line_ending": "Unix"
			}
		},
		{
			"file": "todo.md",
			"settings":
			{
				"buffer_size": 499,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/input.dat",
			"settings":
			{
				"buffer_size": 137,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/inputE53.dat",
			"settings":
			{
				"buffer_size": 361,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FEMTypes.f90",
			"settings":
			{
				"buffer_size": 674,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/inputS219.dat",
			"settings":
			{
				"buffer_size": 142,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "   [6.6063361       0.0000000       159.99199      -6.4996748       0.0000000       0.0000000;0.0000000       6.5530057      -79.995995       0.0000000     -5.33306636E-02  -79.995995   ;159.99199      -79.995995      479975.97      0.0000000      79.995995      79995.992   ;-6.4996748       0.0000000       0.0000000       6.6063361       0.0000000       159.99199    ; 0.0000000     -5.33306636E-02   79.995995       0.0000000       6.5530057       79.995995    ; 0.0000000      -79.995995       79995.992       159.99199       79.995995       479975.97   ]",
			"settings":
			{
				"buffer_size": 560,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/FEMMath.f90",
			"settings":
			{
				"buffer_size": 5368,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Makefile/Make.sublime-build",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
			[
				"mark",
				"Set Syntax: Markdown"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"markd",
				"Pandoc: Render Markdown DocX"
			],
			[
				"markdown",
				"Set Syntax: MultiMarkdown"
			],
			[
				"markdoen",
				"Markdown Preview: preview in Sublime Text"
			],
			[
				"MODER",
				"Set Syntax: Fortran - Modern"
			],
			[
				"mo",
				"Set Syntax: Fortran - Modern"
			],
			[
				"for",
				"Set Syntax: Fortran - Modern"
			],
			[
				"shell",
				"Set Syntax: Shell Script (Bash)"
			],
			[
				"git",
				"Git: Diff Tool Current File"
			],
			[
				"Package Control: ",
				"Package Control: Disable Package"
			],
			[
				"enable",
				"Package Control: Disable Package"
			],
			[
				"pack",
				"Package Control: Enable Package"
			],
			[
				"add",
				"Package Control: Add Repository"
			],
			[
				"mode",
				"Set Syntax: Fortran - Modern"
			],
			[
				"remove",
				"Package Control: Remove Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"fo",
				"Set Syntax: Fortran - Punchcard"
			],
			[
				"comm",
				"Toggle Block Comment"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"pa",
				"Package Control: Install Package"
			],
			[
				"pag",
				"Package Control: Install Package"
			],
			[
				"fort",
				"Set Syntax: Fortran - Punchcard"
			],
			[
				"",
				"Preferences: Key Bindings - User"
			],
			[
				"key",
				"Preferences: Key Bindings - User"
			],
			[
				"make",
				"Set Syntax: Makefile"
			],
			[
				"bul",
				"Build: Build"
			]
		],
		"width": 593.0
	},
	"console":
	{
		"height": 139.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/home/simenhg/workspace/FEMA/src/output.dat",
		"/home/simenhg/workspace/FEMA/src/math.f90",
		"/home/simenhg/workspace/FEMA/FEMA.sublime-project",
		"/home/simenhg/workspace/FEMA/FEMA.sublime-workspace",
		"/home/simenhg/workspace/FEMA/axbsolver.py",
		"/home/simenhg/workspace/FEMA/src/inputS219.dat",
		"/home/simenhg/workspace/FEMA/src/inputEasy.dat",
		"/home/simenhg/workspace/FEMA/src/inputE52S224.dat",
		"/home/simenhg/Downloads/lapacks.f90",
		"/home/simenhg/.config/sublime-text-2/Packages/SublimeCodeIntel/Base File.sublime-settings",
		"/home/simenhg/.config/sublime-text-2/Packages/User/Default (Linux).sublime-keymap",
		"/home/simenhg/.config/sublime-text-2/Packages/Default/Default (Linux).sublime-keymap",
		"/home/simenhg/Documents/skole/prosedyreorientert/math/gauss.f90",
		"/home/simenhg/glibal.txt",
		"/home/simenhg/.config/sublime-text-2/Packages/SublimeCodeIntel/Default (Linux).sublime-mousemap",
		"/home/simenhg/.config/sublime-text-2/Packages/Terminal/Default (Linux).sublime-keymap",
		"/home/simenhg/.config/sublime-text-2/Packages/Terminal/Terminal.sublime-settings",
		"/home/simenhg/workspace/FEMA/src/Makefile",
		"/home/simenhg/.config/sublime-text-2/Packages/User/Fortran - Modern.sublime-settings",
		"/home/simenhg/.config/sublime-text-2/Packages/User/FEMA.sublime-build",
		"/home/simenhg/.config/sublime-text-2/Packages/User/McMake.sublime-build"
	],
	"find":
	{
		"height": 37.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"]]",
			",",
			"]]",
			" 479975.97   ]]",
			"print",
			"TODO",
			"''\n",
			"  interface \n!      subroutine GaussSolver(A,B,X,len, errorFlag) \n!        integer, intent(in) :: len\n!        integer, intent(inout) :: errorFlag\n!        real, intent(inout)  :: A(len,len), B(len)\n!        REAL, intent(out) :: X(len)\n!      end Subroutine GaussSolver\n\n!      subroutine BackwardSubstitution(A,B,X,len ,errorFlag)\n!        integer, intent(in) :: len\n!        integer, intent(inout) :: errorFlag\n!        real, intent(inout)  :: A(len,len), B(len)\n!        REAL, intent(out) :: X(len)\n!      end Subroutine BackwardSubstitution\n\n!      real  function  AngelFromPoints(x1,y1,x2,y2)\n!        real, intent(in)::x1,y1,x2,y2\n!      end function AngelFromPoints\n\n!      real  function  LengthBetweenPoints(x1,y1,x2,y2)\n!        real, intent(in)::x1,y1,x2,y2\n!      end function LengthBetweenPoints\n\n!      function RotationMatrix(cosT,sinT)\n!        real, intent(in) :: cosT, sinT \n!      end function RotationMatrix\n\n\n\n!   end interface",
			")\n",
			"globalIndex",
			"GTRGConverter",
			"tempLoad",
			"pop",
			"Matrix",
			"LoadVector",
			"Loads",
			"popula",
			"globalmater",
			"ios",
			"t3",
			"\n  ",
			"do",
			"ctrl+shift+d",
			"1",
			"elm",
			"Elms",
			"file_out",
			"write",
			"nulli",
			"numberof",
			"elm",
			"inertia",
			"i",
			"null",
			"Null",
			"number",
			"number\n",
			"number",
			"TotalDegrees",
			"printM",
			"print",
			"printm",
			"1",
			"sinT",
			"cosT",
			"print",
			"load",
			"\n     ",
			"hide",
			"show",
			"hide",
			"RGSMLen",
			"    \n",
			"type",
			"typ",
			"type",
			"GSMLen",
			"GlobalToRedusedGlobalStiffnessMatrixConverter",
			"]]\n",
			"070",
			"069",
			"    ]",
			"\n[",
			"READ",
			"        ",
			"epsil",
			"READ",
			"A",
			"lower_sigular_value",
			")\n",
			"),",
			"in",
			"print *, x1,x2,y1,y2,dy,dx, atan(dy/dx)",
			"make",
			"test",
			"\n     "
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"]]",
			"RGSMLEN",
			"inertia",
			"angle"
		],
		"reverse": false,
		"show_context": false,
		"use_buffer2": false,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 1,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Test/axbsolver.py",
					"settings":
					{
						"buffer_size": 4617,
						"regions":
						{
						},
						"selection":
						[
							[
								3178,
								3178
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1170.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/FEMMethods.f90",
					"settings":
					{
						"buffer_size": 12704,
						"regions":
						{
							"bookmarks":
							{
								"flags": 144,
								"icon": "bookmark",
								"regions":
								[
								],
								"scope": "bookmarks"
							}
						},
						"selection":
						[
							[
								10932,
								10932
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/Syntaxes/Fortran - Modern.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 5352.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/FEMUtility.f90",
					"settings":
					{
						"buffer_size": 1971,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/Syntaxes/Fortran - Modern.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 495.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/FEM.f90",
					"settings":
					{
						"buffer_size": 3198,
						"regions":
						{
						},
						"selection":
						[
							[
								1140,
								1140
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/Syntaxes/Fortran - Modern.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 450.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "README.md",
					"settings":
					{
						"buffer_size": 643,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/Markdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 6,
			"sheets":
			[
				{
					"buffer": 5,
					"file": "todo.md",
					"settings":
					{
						"buffer_size": 499,
						"regions":
						{
						},
						"selection":
						[
							[
								499,
								499
							]
						],
						"settings":
						{
							"syntax": "Packages/Markdown/MultiMarkdown.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/input.dat",
					"settings":
					{
						"buffer_size": 137,
						"regions":
						{
						},
						"selection":
						[
							[
								123,
								123
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/inputE53.dat",
					"settings":
					{
						"buffer_size": 361,
						"regions":
						{
						},
						"selection":
						[
							[
								144,
								144
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/FEMTypes.f90",
					"settings":
					{
						"buffer_size": 674,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/Syntaxes/Fortran - Modern.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/inputS219.dat",
					"settings":
					{
						"buffer_size": 142,
						"regions":
						{
						},
						"selection":
						[
							[
								117,
								117
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"settings":
					{
						"buffer_size": 560,
						"regions":
						{
						},
						"selection":
						[
							[
								560,
								560
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/Syntaxes/Fortran - Modern.tmLanguage"
						},
						"translation.x": 2663.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/FEMMath.f90",
					"settings":
					{
						"buffer_size": 5368,
						"regions":
						{
						},
						"selection":
						[
							[
								4838,
								4838
							]
						],
						"settings":
						{
							"syntax": "Packages/Fortran/Syntaxes/Fortran - Modern.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2430.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 33.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.565545550847,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 182.0
	},
	"output.git":
	{
		"height": 118.0
	},
	"replace":
	{
		"height": 64.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
			[
				"py",
				"Test/axbsolver.py"
			],
			[
				"femm",
				"src/FEMMath.f90"
			],
			[
				"in",
				"src/inputS219.dat"
			],
			[
				"",
				"/home/simenhg/workspace/FEMA/src/FEMMethods.f90"
			]
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
		],
		"width": 380.0
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true
}
